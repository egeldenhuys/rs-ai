(* Problem
  The default MoveMouse() function moves the mosue instatly to the
  given location. A method needs to be designed that simulates
  human mouse movement.
*)

(*
SimpleMouse
~~~~

Description:
  This procedure moves the mouse to the given coordinates.
  It does so by moving it first in the x axis until it matches the target x value.
  And then does the same for the y axis.

Parameters:
  x     - The target x coordinate
  Y     - The target y coordinate
  size  - How many pixels to move the mouse each increment.
  sleep - How long to wait before moving the mouse again

Remarks:
  When the mouse is moved by hand it does not reach the destination.
  It stops once it has moved a certain amount.

Example:
  SimpleMouse(800, 600, 5, 5);

*)

procedure Mouse(x, y, size, sleep : integer);
var
  mouseX, MouseY : Integer; // The current mouse position
  distX, distY : Integer;   // The distance to move in each axis
  i : Integer;              // Loop counter for moving the mouse
  inc : Integer;            // The negative or positive value of size

begin
  (* Plan
    The first prototype will simply move the mouse 1 pixel at a time until
    the axis matches the given axis.
  *)

  // Get the initial mouse position for use in distance calculations
  GetMousePos(mouseX, MouseY);

  // Check how far we have to travel in each axis
  // We need to divide by the size to find how many times we need to move
  // the mouse by size amount.
  distX := Round((x - MouseX) / size);
  distY := Round((y - MouseY) / size);

  // == X Axis ==

  // Determine the direction
  if distX < 0 then
    inc := -size
  else
    inc := size

  // Move in the x axis until we are at the defined x position
  for i := 0 to Abs(distX) do
  begin

    // We need the new position and use it as the reference point
    // for the next movement
    GetMousePos(mouseX, MouseY);

    MoveMouse(mouseX + inc, MouseY);
    wait(sleep);

  end;

  // == Y Axis ==

  // Determine the direction
  if distY < 0 then
    inc := -size
  else
    inc := size

  // Move in the y axis until we are at the defined y position
  for i := 0 to Abs(distY) do
  begin

    // We need the new position and use it as the reference point
    // for the next movement
    GetMousePos(mouseX, MouseY);

    MoveMouse(mouseX, MouseY + inc);
    wait(sleep);

  end;

end;

procedure Mouse_2(x, y: integer; speed: extended);
var
  mouseX, mouseY : integer;
  distTotal : extended;
  distX, distY : extended;   // The distance to move in each axis
  time : extended;
  incX , incY : extended;
  i : integer;


begin

speed := speed;

  // Get the current mouse position
  GetMousePos(mouseX, mouseY);

  // Calculate the distance in each axis
  distX := (x - MouseX);
  distY := (y - MouseY);

  writeln('distX: ' + toStr(distX));
  writeln('distY: ' + toStr(distY));

  // Calculate the total distance
  distTotal := (sqrt(power(distX, 2) + power(distY, 2)));

  writeln('distTotal: ' + toStr(distTotal));

  // speed = dist / time
  // Calculate how long it must take for the mouse to move the total dist.
  time := distTotal * speed;

  writeln('time: ' + toStr(time));

  // We know how long the mouse will be moving (time)
  // Make the mouse move in the x axis for the amount of time

  // Calculate how far we have to move the mosue in each direction
  // for time to be at the target at the end.

  incX := (distX / time);
  incY := (distY / time);

  writeln('incX: ' + toStr(incX));
  writeln('incY: ' + toStr(incY));

  for i := 0 to Ceil(time) do
  begin
    GetMousePos(mouseX, mouseY);
    MoveMouse(Floor(mouseX + incX), Floor(mouseY + incY));
    //writeln('New Position: ' + toStr(Floor(mouseX + incX)) + ', ' + toStr(Floor(mouseY + incY)));
    wait(Ceil(time));
  end;


end;




