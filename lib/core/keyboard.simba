(*
keyboard
========

Description:
  Contains function for typing text.

*)

// Special keys
const
  KEY_SHIFT = 16;
  KEY_ENTER = 10;
  KEY_TAB = 9;
  KEY_CAPSLOCK = 20;
  KEY_BACKSPACE = 8;

(*
PressKey
========

Description:
  Types the given text with time variations.

Paramaters:
  key - The keycode of the key to press

Notes:
  This function is different to the default PressKey() function
  as it is more human. The difference is show below.

  Default PressKey() function:
  keyup    keyCode=50  (2)
  keydown  keyCode=50  (2)
  keypress keyCode=50  (2)

  override PressKey() function, which is the same as a human:
  keydown  keyCode=80  (P)
  keypress keyCode=112 (p)
  keyup    keyCode=80  (P)
  keydown time: 84.000ms


Example:
  PressKey(65);
  Presskey(GetKeyCode('a'));

*)
procedure PressKey(key : word); override;
begin
  KeyDown(key);
  wait(RandomRange(30, 80));

  KeyUp(key);

end;

(*
ToggleKey
=========

Description:
  Toggles the key state

Paramaters:
  key       - The key value to toggle

Notes:
  If the key is currently pressed down by the script
  it will be pulled up and vice versa.

Example:
  ToggleKey(SHIFT_KEY);

*)
procedure ToggleKey(key : word);
begin

  if isKeyDown(key) then
    KeyUp(key)
  else
    KeyDown(key);

end;

Type
  TKey = record
    lower, upper : Char;
  end;

(*
TypeText
========

Description:
  Types the given text with time variations.

Paramaters:
  text       - The text to type.
  pressEnter - Press enter after typing the text?

Notes:
  This will also press the shift key for keys such as %, &, @ etc.

Example:
  TypeText('I need money pl0x!??!!@#', True);

*)
procedure TypeText(text : string; pressEnter : boolean);

const
  downKeysShift : array[0..20] of TKey = [
  ['1', '!'  ],
  ['2', '@'  ],
  ['3', '#'  ],
  ['4', '$'  ],
  ['5', '%'  ],
  ['6', '^'  ],
  ['7', '&'  ],
  ['8', '*'  ],
  ['9', '('  ],
  ['0', ')'  ],
  [#192, '~'  ],
  [#189, '_'  ],
  [#187, '+'  ],
  [#219, '{'  ],
  [#221, '}'  ],
  [#220, '|'  ],
  [#186, ':'  ],
  [#222, '"'],
  [#188, '<'  ],
  [#190, '>'  ],
  [#191, '?'  ]
  ];

  downKeys : array[0..35] of TKey = [
  ['A', 'a'],
  ['B', 'b'],
  ['C', 'c'],
  ['D', 'd'],
  ['E', 'e'],
  ['F', 'f'],
  ['G', 'g'],
  ['H', 'h'],
  ['I', 'i'],
  ['J', 'j'],
  ['K', 'k'],
  ['L', 'l'],
  ['M', 'm'],
  ['N', 'n'],
  ['O', 'o'],
  ['P', 'p'],
  ['Q', 'q'],
  ['R', 'r'],
  ['S', 's'],
  ['T', 't'],
  ['U', 'u'],
  ['V', 'v'],
  ['W', 'w'],
  ['X', 'x'],
  ['Y', 'y'],
  ['Z', 'z'],
  [#192, '`'  ],
  [#189, '-'  ],
  [#187, '='  ],
  [#219, '['  ],
  [#221, ']'  ],
  [#220, '\'  ],
  [#186, ';'  ],
  [#188, ','  ],
  [#190, '.'  ],
  [#191, '/'  ]
  ];

  shiftKeys : array[0..25] of Char = [
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'I',
  'J',
  'K',
  'L',
  'M',
  'N',
  'O',
  'P',
  'Q',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'X',
  'Y',
  'Z'
  ];

var
  i, j : integer;
  shift : boolean;
  keyToPress : word;
  found : boolean;

begin

  // Loop through all the characters in the given string
  for i := 1 to Length(text) do
  begin

    shift := false;
    found := false;
    keyToPress := Ord(text[i]);

// Check for down, Shift
    if found = false then
    begin
      for j := 0 to Length(downKeysShift) do
      begin

        if text[i] = downKeysShift[j].upper then
          begin
            shift := true;
            keyToPress := Ord(downKeysShift[j].lower);
            found := true;
            Break;
          end;

      end; // End Shift check
    end;

    // Check down keys
    if found = false then
    begin
      for j := 0 to Length(downKeys) do
      begin

        if text[i] = downKeys[j].upper then
        begin
          keyToPress := Ord(downKeys[j].lower);
          found := true;
          Break;
        end;

      end; // End down check
    end;

      // Check shift keys
    if found = false then
    begin
      for j := 0 to Length(shiftKeys) do
      begin

        if text[i] = shiftKeys[j] then
        begin
          shift := true;
          keyToPress := Ord(text[i]);
          found := true;
          Break;
        end;

      end; // End shift check

    end; // End key checks

    if shift = true then
    begin
        KeyDown(KEY_SHIFT);
        wait(RandomRange(40, 100));

        PressKey(keyToPress);
        wait(RandomRange(40, 100));

        KeyUp(KEY_SHIFT);

        wait(RandomRange(50, 200));
    end
    else
    begin

      PressKey(keyToPress);
      wait(RandomRange(50, 200));

    end; // End key press

  end; // End text loop


  if pressEnter = True then
    PressKey(KEY_ENTER);

end;
